{"version":3,"file":"scriptchallenge.js","mappings":"mBAIAA,QAAQC,IAAI,6CACZD,QAAQC,IAAI,+BACZ,MAAMC,EAAY,CAAC,CAAC,SAAY,eAAgB,QACI,CAAC,CAACC,MAAM,IAAKC,UAAW,UAAWC,SAAUC,GAC7C,CAACH,MAAM,IAAKC,UAAW,UAAWC,SAAUE,KAC5E,CAAC,SAAY,eAAgB,QACG,CAAC,CAACJ,MAAM,IAAKC,UAAW,UAAWC,SAAUE,GAC7C,CAACJ,MAAM,IAAKC,UAAW,UAAWC,SAAUC,KAC5E,CAAC,SAAY,eAAgB,QACG,CAAC,CAACH,MAAM,IAAKC,UAAW,UAAWC,SAAUC,GAC7C,CAACH,MAAM,IAAKC,UAAW,UAAWC,SAAUE,MAOhG,IAEIC,EAEAC,EASAC,EAbAC,EAAsB,IAYtBC,EAAO,EAGX,SAASC,EAAcD,GACnB,GAAGA,EAAOV,EAAUY,OAAS,EAGzB,OAFAC,GAAGC,OAAOC,MAAMC,aAAa,YAAa,QAU9BH,GAAGC,OAAOC,MAAME,OACrB,KACPJ,GAAGK,KAAKC,UAAU,mBAClBN,GAAGK,KAAKC,UAAU,cAClBN,GAAGK,KAAKE,UAAU,eAVtB,MAAMC,EAAgBrB,EAAUU,GAAMW,SAChCC,EAAWtB,EAAUU,GAAMa,QACjChB,EAAeM,GAAGW,GAAGC,UAAU,eAAgBJ,EAAUC,EAC7D,CAWA,SAASlB,IACL,IAAIsB,EAAWb,GAAGC,OAAOC,MAAMY,aAAa,SAC5CD,GAAQ,GACRb,GAAGC,OAAOC,MAAMC,aAAa,QAASU,GACtC5B,QAAQC,IAAIc,GAAGC,OAAOC,MAAME,OAC5BV,EAAaqB,QACblB,IACAC,EAAcD,EAClB,CAEA,SAASL,IACLE,EAAaqB,QACblB,IACAC,EAAcD,EAClB,CAEA,SAASmB,IACLpB,IACA,IAAIqB,EAAUC,KAAKC,MAAMvB,EAAiB,IACtCwB,EAAUF,KAAKC,MAAMvB,EAA4B,GAAVqB,GACvCG,EAAUH,EAAW,GAAKpB,EAAOV,EAAUY,QAC3CN,EAAUsB,QACVtB,EAAYO,GAAGW,GAAGC,UAAU,cAAcK,EAAU,IAAMG,EAAU,WAAW,KACzEvB,EAAOV,EAAUY,OAAS,GAChCN,EAAYO,GAAGW,GAAGC,UAAU,cAAe,wBAA0BK,EAAU,IAAMG,EAAQ,IAC7FC,cAAc1B,IACNyB,EAAUH,IAClBxB,EAAYO,GAAGW,GAAGC,UAAU,cAAe,iBAAiB,IAEpE,CAEAZ,GAAGsB,SAASC,MAAK,KACbtC,QAAQC,IAAI,uBACZD,QAAQC,IAAI,gBAAiBc,GAAGC,OAAOuB,MACvC,IAAIC,EAAczB,GAAGC,OAAOC,MAAMY,aAAa,aAC/C7B,QAAQC,IAAIuC,EAAW,mBACpB7B,GAA6B,GAAV6B,GAA2BC,MAAZD,IACjChC,EAAYO,GAAGW,GAAGC,UAAU,cAAe,iBAAiB,IAC5DjB,EAAQgC,YAAYX,EAAc,KAClClB,EAAcD,IAGlBG,GAAGC,OAAOC,MAAMC,aAAa,QAlEb,GAmEhBlB,QAAQC,IAAIc,GAAGC,OAAOC,MAAME,MAAM,IAEnCwB,OAAMC,GAAK5C,QAAQ6C,MAAMD,I","sources":["webpack://workadventure-map-starter-kit/./src/challenge.ts"],"sourcesContent":["/// <reference types=\"@workadventure/iframe-api-typings\" />\n/// <reference path=\"../node_modules/@workadventure/iframe-api-typings/iframe_api.d.ts\" />\n//import { bootstrapExtra } from \"@workadventure/scripting-api-extra\";\n//import { time } from \"console\";\nconsole.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa\");\nconsole.log('Script started successfully'); \nconst questions = [{\"question\": \"question 1/3\", \"buttons\":\n                                                    [{label:\"A\", className: \"primary\", callback: winPoint},\n                                                    {label:\"B\", className: \"primary\", callback: lose}]},\n                    {\"question\": \"question 2/3\", \"buttons\":\n                                                    [{label:\"C\", className: \"primary\", callback: lose},\n                                                    {label:\"D\", className: \"primary\", callback: winPoint}]},\n                    {\"question\": \"question 3/3\", \"buttons\":\n                                                    [{label:\"E\", className: \"primary\", callback: winPoint},\n                                                    {label:\"F\", className: \"primary\", callback: lose}]}\n                    ]\n// timeRemains\n//let timeR: any = undefined;\n// const start_time = new Date();\n// const end_time = new Date();\n\nlet remaining_time: any = 10 * 60;\n\nlet timer_pop:any;// = WA.ui.openPopup(\"TimeRemains\", \"10:00 left..\",[]);\n\nlet question_pop:any ; /*WA.ui.openPopup(\"questionArea\", \"reponds a ou b\", [{label:\"A\",\nclassName: \"primary\",\ncallback: winPoint},\n{label:\"B\",\nclassName: \"primary\",\ncallback: lose}]);*/\n\nlet score: number = 0;\nlet cmpt = 0\nlet inter: any; \n \nfunction show_question(cmpt: number) {\n    if(cmpt > questions.length - 1) {\n        WA.player.state.saveVariable(\"completed\", 1);\n        unblock();\n        return;\n    }\n    const question: any = questions[cmpt].question;\n    const btn: any = questions[cmpt].buttons;\n    question_pop = WA.ui.openPopup(\"questionArea\", question, btn);\n}\n\nfunction unblock(){\n    let check:any = WA.player.state.score;\n    if (check>=20){\n        WA.room.hideLayer(\"collisionLevel1\");\n        WA.room.hideLayer(\"wallLevel1\");\n        WA.room.showLayer(\"congrats1\");\n    }\n}\n\nfunction winPoint(){\n    let temp:any = WA.player.state.loadVariable(\"score\");\n    temp += 10;\n    WA.player.state.saveVariable(\"score\", temp);\n    console.log(WA.player.state.score);\n    question_pop.close();\n    cmpt++;\n    show_question(cmpt);\n}\n\nfunction lose(){\n    question_pop.close();\n    cmpt++;\n    show_question(cmpt);\n}\n\nfunction change_popup() {\n    remaining_time--;\n    let minutes = Math.floor(remaining_time / 60);\n    let seconds = Math.floor(remaining_time - (minutes * 60));\n    if((seconds + minutes) > 0 && cmpt < questions.length) {\n        timer_pop.close();\n        timer_pop = WA.ui.openPopup(\"TimeRemains\",minutes + ':' + seconds + '\\nleft..',[]);\n    } else if(cmpt > questions.length - 1) {\n        timer_pop = WA.ui.openPopup(\"TimeRemains\", \"Terminé ! Il restait \" + minutes + ':' + seconds,[]);\n        clearInterval(inter);\n    } else if(!(seconds + minutes)) {\n        timer_pop = WA.ui.openPopup(\"TimeRemains\", \"Temps écoulé..\",[]);\n    }\n}\n// Waiting for the API to be readyS\nWA.onInit().then(() => {\n    console.log('Scripting API ready');\n    console.log('Player tags: ', WA.player.tags)\n    let complete:any =WA.player.state.loadVariable(\"completed\");\n    console.log(complete + \"FRIOZEVJRFEHVO\");\n    if(remaining_time && (complete==0 || complete == undefined)) {\n        timer_pop = WA.ui.openPopup(\"TimeRemains\", \"10:00 \\nleft..\",[]);\n        inter = setInterval(change_popup, 1000);\n        show_question(cmpt);\n    }\n\n    WA.player.state.saveVariable(\"score\", score);\n    console.log(WA.player.state.score);\n    \n}).catch(e => console.error(e));\n\n\nexport {};"],"names":["console","log","questions","label","className","callback","winPoint","lose","timer_pop","question_pop","inter","remaining_time","cmpt","show_question","length","WA","player","state","saveVariable","score","room","hideLayer","showLayer","question","btn","buttons","ui","openPopup","temp","loadVariable","close","change_popup","minutes","Math","floor","seconds","clearInterval","onInit","then","tags","complete","undefined","setInterval","catch","e","error"],"sourceRoot":""}